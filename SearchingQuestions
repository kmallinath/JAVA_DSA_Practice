//Program to find ceiling and flooring of a given target number form an array of integers
public class MyClass {
    public static void main(String args[]) 
    {
      int [] arr={1,10,20,30,40,50,55,59,60,70,80,90,100,102};
      int target=101;
      int ceil=ceiling(arr,target);
      int floor=flooring(arr,target);
       System.out.print(ceil+" "+floor);
      
    }
    static int ceiling(int[]arr,int target)
    {
        int start=0;
        int end=arr.length-1;
        while(start<=end)
        {
            int mid=start+(end-start)/2;
            if(arr[mid]==target)
                return mid;
            if(arr[mid]>target)
                end=mid-1;
            else
                start=mid+1;
        }
    
       return arr[start];
    }
    static int flooring(int[]arr,int target)
    {
        int start=0;
        int end=arr.length-1;
        while(start<=end)
        {
            int mid=start+(end-start)/2;
            if(arr[mid]==target)
                return mid;
            if(arr[mid]>target)
                end=mid-1;
            else
                start=mid+1;
       }
    
    return arr[end];
    }
}




//PROGRAM TO FIND TARGET ELEMENT IN INFINATE ARRAY


import java.io.*;
import java.util.*;

class GFG {
	public static void main (String[] args) {
		Scanner sc=new Scanner(System.in);
		int[]a={1,10,11,15,19,20,33,44,55,65,66,67,70,78,88,99,100};
		int target=55;
		int answer=ans(a,target);
		System.out.print(answer);
		
		
		
	}
	static int ans(int a[],int target)
	{
	    int start=0;
        int end=1; 
		while(true)
		{
		    int ans=bs(a,target,start,end);
		    if(ans!=-1)
		        return ans;
		    start=end+1;
		    end=start+2*(end-start+1);
		    
		}
		
	}
	static int bs(int[] arr,int target,int start,int end)
	{
	    
       while(start<=end)
       {
           int mid=start+(end-start)/2;
           if(arr[mid]>target)
               end=mid-1;
           else if(arr[mid]<target)
               start=mid+1;
           else
           {   
              return mid;
           }
	  }
	  return -1;
	}
}
